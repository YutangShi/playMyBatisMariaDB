<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="services.WebService">

	<!-- 註冊會員 -->
	<insert id="signupNewMember" parameterType="pojo.web.signup.request.SignupRequest">
		insert into
		member_main (memberNo ,email , password , username , createDate, modifyDate)
		values
		( 
			null , 
			#{signupRequest.email} ,
			#{signupRequest.password},
			#{signupRequest.username} ,
			DATE_FORMAT(NOW() , '%Y%m%d%H%i%s') ,
			DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		);
	</insert>


	<!-- 檢查是否有重覆註冊的會員 -->
	<select id="checkMemberByEmail" parameterType="String"
		resultType="boolean">
		SELECT count(1) FROM member_main WHERE email=#{email}
	</select>
	
	
	<!-- 檢查是否有重覆的使用者名稱 -->
	<select id="checkMemberByUsername" parameterType="String"
		resultType="boolean">
		SELECT count(1) FROM member_main WHERE username=#{username}
	</select>
	

	<!-- 根據email查詢會員資料 -->
	<select id="findMemberByEmail" parameterType="String"
		resultType="pojo.web.Member">
		SELECT * FROM member_main WHERE email = #{email}
	</select>
	
	
	<!-- 根據memberNo查詢會員資料 -->
	<select id="findMemberByMemberNo" parameterType="String"
		resultType="pojo.web.Member">
		SELECT * FROM member_main WHERE memberNo = #{memberNo}
	</select>


	<!-- 根據 email與username查尋會員資料 -->
	<select id="findMemberByEmailAndUserName" parameterType="String"
		resultType="pojo.web.Member">
		SELECT * FROM member_main WHERE email = #{email} AND username =#{username}
	</select>

	<!-- 註冊認證連結 -->
	<insert id="genSignupAuthData" parameterType="Map">
		insert into
		member_auth (authString ,memberNo , sendDate , isUse , createDate , modifyDate , expiryDate)
		values
		( 
			#{memberAuth.authString} , 
			#{memberAuth.memberNo} ,
			DATE_FORMAT(NOW() , '%Y%m%d%H%i%s'),
			0,
			DATE_FORMAT(NOW() , '%Y%m%d%H%i%s') ,
			DATE_FORMAT(NOW(),'%Y%m%d%H%i%s') ,
			DATE_FORMAT(DATE_ADD(NOW(),INTERVAL 1 DAY),'%Y%m%d%H%i%s')
		);
	</insert>
	
	
	<!-- 會員記錄檔 -->
	<insert id="genMemberLoginLog" parameterType="Map">
		insert into
		member_login_log (memberNo , status , ipAddress , device , loginDate)
		values
		( 
			#{memberLoginData.memberNo} , 
			#{memberLoginData.status} ,
			#{memberLoginData.ipAddress} ,
			#{memberLoginData.device} ,
			DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		);
	</insert>
	
	
	<!-- 撈出會員認證資訊 -->
	<select id="getMemberAuthData" parameterType="String" resultType="pojo.web.MemberAuth">
		SELECT *,DATE_FORMAT(NOW(),'%Y%m%d%H%i%s') as dbTime FROM member_auth WHERE authString=#{auth}
	</select>
	
	
	<!--  更新會員認證-->
	<update id="updateMemberAuth">
		UPDATE member_auth SET isUse = 1 , modifyDate = DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		WHERE memberNo = #{memberNo} AND isUse = 0
	</update>
	
	
	<!--  更新會員資料 -->
	<update id="updateMemberToAuthOk">
		UPDATE member_main SET status = '2' , modifyDate = DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		WHERE memberNo = #{memberNo}
	</update>
	
	
	<!-- 會員記錄檔 -->
	<insert id="genMemberChangeLog" parameterType="pojo.web.Member">
		insert into
		member_main_log(memberNo , email , password , username , createDate)
		values
		( 
			#{member.memberNo} , 
			#{member.email} ,
			#{member.password},
			#{member.username} ,
			DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
		)
	</insert>
	
	
	<!-- 會員Session紀錄檔 -->
	<insert id="genMemberSession" parameterType="pojo.web.auth.MemberSession">
		insert into
		member_session(sessionId , sessionSign , aseKey , aseIv , memberNo , expiryDate , createDate , modifyDate)
		values
		( 
			#{memberSession.sessionId} , 
			#{memberSession.sessionSign} ,
			#{memberSession.aseKey} ,
			#{memberSession.aseIv} ,
			#{memberSession.memberNo} ,
			#{memberSession.expiryDate} ,
			#{memberSession.createDate} ,
			#{memberSession.modifyDate} 
		) ON DUPLICATE KEY UPDATE 
		sessionId 	= #{memberSession.sessionId},
		sessionSign = #{memberSession.sessionSign},
		aseKey 		= #{memberSession.aseKey},
		aseIv 		= #{memberSession.aseIv},
		expiryDate 	= #{memberSession.expiryDate},
		modifyDate 	= #{memberSession.modifyDate}
	</insert>
	
</mapper>